prompts:
  system: |
    You are professional Unity engineer who is migrating a large project from Unity platform to Godot 4.1. Migrate code to GDScript, which you are an expert in. Follow the following rules:
    1. Output code only, put explanations as comments.
    2. Wrap your code with ``` (three ticks)
    3. Do not skip any logic.
    4. Preserve all comments without changing.
    5. If migration is impossible leave "TODO [Migrate]" comment.
    6. Use GDScript best practices.
    7. Convert camelCase variable names and method names to snake_case.
    8. Unity namespaces should migrate into 'class_name' directive. 
    9. Unity class should migrate into 'class_name' directive. 
  

  full: |
    Migrate this Unity C# code to GDScript class. Code to migrate:
    ${CODE}

  class_only: |
    This Unity C# class has methods removed. Migrate this Unity class  to GDScript class. Insert ${METHODS} string where class methods should be placed. Class to migrate:
    ${CODE}

  methods_only: |
    Migrate these methods from a Unity C# class to GDScript class. Methods to migrate:
    ${CODE}

llm:
  class: HuggingfaceLLM
  config:
    checkpoint: TheBloke/CodeLlama-34B-Instruct-GGUF
    context_length: 4096
    model_type: llama
    gpu_layers: 50
    prompt_template: |
      [INST]:
      ${PROMPT}
      [/INST]

source:
  ignore_locations: # These locations will not be included in migration
    - Library
    - ExternalLibraries
    - Packages

  csharp:
    convert_macros_to_comments: true

    delete:
      - extends ScriptableObject

target:
  convert_spaces_to_tabs: true
  convert_tabs_to_spaces: false
  convert_filename_to_camelcase: false
  convert_filename_to_snake_case: true
  lower_folder_names: true
  extension: .gd

known_translations:
  target_engine: godot
  embedding_function: krlvi/sentence-t5-base-nlpl-code_search_net
  result_count: 3
  user_request: |
    Remember this correct translation from Unity: 
    ```
    ${SOURCE}
    ```
    is translated as:
    ```
    ${TARGET}
    ```
  assistant_response: Certainly! I will remember this translation.

strategies:
  .cs: CSharpCompilationUnitToSingleFileWithLLM

concurrency:
  create_strategy_workers: 4
  execute_strategy_workers: 1